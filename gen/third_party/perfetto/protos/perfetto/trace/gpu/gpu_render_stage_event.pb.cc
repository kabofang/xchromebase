// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/gpu/gpu_render_stage_event.proto

#include "protos/perfetto/trace/gpu/gpu_render_stage_event.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto;
namespace perfetto {
namespace protos {
class GpuRenderStageEvent_ExtraDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_ExtraData> _instance;
} _GpuRenderStageEvent_ExtraData_default_instance_;
class GpuRenderStageEvent_Specifications_ContextSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_Specifications_ContextSpec> _instance;
} _GpuRenderStageEvent_Specifications_ContextSpec_default_instance_;
class GpuRenderStageEvent_Specifications_DescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_Specifications_Description> _instance;
} _GpuRenderStageEvent_Specifications_Description_default_instance_;
class GpuRenderStageEvent_SpecificationsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent_Specifications> _instance;
} _GpuRenderStageEvent_Specifications_default_instance_;
class GpuRenderStageEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GpuRenderStageEvent> _instance;
} _GpuRenderStageEvent_default_instance_;
class InternedGraphicsContextDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InternedGraphicsContext> _instance;
} _InternedGraphicsContext_default_instance_;
class InternedGpuRenderStageSpecificationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InternedGpuRenderStageSpecification> _instance;
} _InternedGpuRenderStageSpecification_default_instance_;
}  // namespace protos
}  // namespace perfetto
static void InitDefaultsscc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {
      &scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,
      &scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,}};

static void InitDefaultsscc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_ExtraData_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_ExtraData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_Specifications_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_Specifications();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {
      &scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,
      &scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base,}};

static void InitDefaultsscc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_Specifications_ContextSpec_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_GpuRenderStageEvent_Specifications_Description_default_instance_;
    new (ptr) ::perfetto::protos::GpuRenderStageEvent_Specifications_Description();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_InternedGpuRenderStageSpecification_default_instance_;
    new (ptr) ::perfetto::protos::InternedGpuRenderStageSpecification();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

static void InitDefaultsscc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::perfetto::protos::_InternedGraphicsContext_default_instance_;
    new (ptr) ::perfetto::protos::InternedGraphicsContext();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto}, {}};

namespace perfetto {
namespace protos {
bool InternedGraphicsContext_Api_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> InternedGraphicsContext_Api_strings[4] = {};

static const char InternedGraphicsContext_Api_names[] =
  "OPEN_CL"
  "OPEN_GL"
  "UNDEFINED"
  "VULKAN";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry InternedGraphicsContext_Api_entries[] = {
  { {InternedGraphicsContext_Api_names + 0, 7}, 3 },
  { {InternedGraphicsContext_Api_names + 7, 7}, 1 },
  { {InternedGraphicsContext_Api_names + 14, 9}, 0 },
  { {InternedGraphicsContext_Api_names + 23, 6}, 2 },
};

static const int InternedGraphicsContext_Api_entries_by_number[] = {
  2, // 0 -> UNDEFINED
  1, // 1 -> OPEN_GL
  3, // 2 -> VULKAN
  0, // 3 -> OPEN_CL
};

const std::string& InternedGraphicsContext_Api_Name(
    InternedGraphicsContext_Api value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          InternedGraphicsContext_Api_entries,
          InternedGraphicsContext_Api_entries_by_number,
          4, InternedGraphicsContext_Api_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      InternedGraphicsContext_Api_entries,
      InternedGraphicsContext_Api_entries_by_number,
      4, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     InternedGraphicsContext_Api_strings[idx].get();
}
bool InternedGraphicsContext_Api_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, InternedGraphicsContext_Api* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      InternedGraphicsContext_Api_entries, 4, name, &int_value);
  if (success) {
    *value = static_cast<InternedGraphicsContext_Api>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr InternedGraphicsContext_Api InternedGraphicsContext::UNDEFINED;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::OPEN_GL;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::VULKAN;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::OPEN_CL;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::Api_MIN;
constexpr InternedGraphicsContext_Api InternedGraphicsContext::Api_MAX;
constexpr int InternedGraphicsContext::Api_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
bool InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> InternedGpuRenderStageSpecification_RenderStageCategory_strings[3] = {};

static const char InternedGpuRenderStageSpecification_RenderStageCategory_names[] =
  "COMPUTE"
  "GRAPHICS"
  "OTHER";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry InternedGpuRenderStageSpecification_RenderStageCategory_entries[] = {
  { {InternedGpuRenderStageSpecification_RenderStageCategory_names + 0, 7}, 2 },
  { {InternedGpuRenderStageSpecification_RenderStageCategory_names + 7, 8}, 1 },
  { {InternedGpuRenderStageSpecification_RenderStageCategory_names + 15, 5}, 0 },
};

static const int InternedGpuRenderStageSpecification_RenderStageCategory_entries_by_number[] = {
  2, // 0 -> OTHER
  1, // 1 -> GRAPHICS
  0, // 2 -> COMPUTE
};

const std::string& InternedGpuRenderStageSpecification_RenderStageCategory_Name(
    InternedGpuRenderStageSpecification_RenderStageCategory value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          InternedGpuRenderStageSpecification_RenderStageCategory_entries,
          InternedGpuRenderStageSpecification_RenderStageCategory_entries_by_number,
          3, InternedGpuRenderStageSpecification_RenderStageCategory_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      InternedGpuRenderStageSpecification_RenderStageCategory_entries,
      InternedGpuRenderStageSpecification_RenderStageCategory_entries_by_number,
      3, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     InternedGpuRenderStageSpecification_RenderStageCategory_strings[idx].get();
}
bool InternedGpuRenderStageSpecification_RenderStageCategory_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, InternedGpuRenderStageSpecification_RenderStageCategory* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      InternedGpuRenderStageSpecification_RenderStageCategory_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<InternedGpuRenderStageSpecification_RenderStageCategory>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::OTHER;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::GRAPHICS;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::COMPUTE;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::RenderStageCategory_MIN;
constexpr InternedGpuRenderStageSpecification_RenderStageCategory InternedGpuRenderStageSpecification::RenderStageCategory_MAX;
constexpr int InternedGpuRenderStageSpecification::RenderStageCategory_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class GpuRenderStageEvent_ExtraData::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_ExtraData>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GpuRenderStageEvent_ExtraData::GpuRenderStageEvent_ExtraData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GpuRenderStageEvent.ExtraData)
}
GpuRenderStageEvent_ExtraData::GpuRenderStageEvent_ExtraData(const GpuRenderStageEvent_ExtraData& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.ExtraData)
}

void GpuRenderStageEvent_ExtraData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GpuRenderStageEvent_ExtraData::~GpuRenderStageEvent_ExtraData() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.ExtraData)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void GpuRenderStageEvent_ExtraData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GpuRenderStageEvent_ExtraData::ArenaDtor(void* object) {
  GpuRenderStageEvent_ExtraData* _this = reinterpret_cast< GpuRenderStageEvent_ExtraData* >(object);
  (void)_this;
}
void GpuRenderStageEvent_ExtraData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GpuRenderStageEvent_ExtraData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_ExtraData& GpuRenderStageEvent_ExtraData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_ExtraData_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_ExtraData::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GpuRenderStageEvent_ExtraData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GpuRenderStageEvent_ExtraData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GpuRenderStageEvent.ExtraData)
  return target;
}

size_t GpuRenderStageEvent_ExtraData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_ExtraData::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_ExtraData*>(
      &from));
}

void GpuRenderStageEvent_ExtraData::MergeFrom(const GpuRenderStageEvent_ExtraData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
}

void GpuRenderStageEvent_ExtraData::CopyFrom(const GpuRenderStageEvent_ExtraData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.ExtraData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_ExtraData::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_ExtraData::InternalSwap(GpuRenderStageEvent_ExtraData* other) {
  using std::swap;
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

std::string GpuRenderStageEvent_ExtraData::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.ExtraData";
}


// ===================================================================

class GpuRenderStageEvent_Specifications_ContextSpec::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_Specifications_ContextSpec>()._has_bits_);
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GpuRenderStageEvent_Specifications_ContextSpec::GpuRenderStageEvent_Specifications_ContextSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
}
GpuRenderStageEvent_Specifications_ContextSpec::GpuRenderStageEvent_Specifications_ContextSpec(const GpuRenderStageEvent_Specifications_ContextSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::memcpy(&context_, &from.context_,
    static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
    reinterpret_cast<char*>(&context_)) + sizeof(pid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
}

void GpuRenderStageEvent_Specifications_ContextSpec::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&context_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&pid_) -
      reinterpret_cast<char*>(&context_)) + sizeof(pid_));
}

GpuRenderStageEvent_Specifications_ContextSpec::~GpuRenderStageEvent_Specifications_ContextSpec() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void GpuRenderStageEvent_Specifications_ContextSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GpuRenderStageEvent_Specifications_ContextSpec::ArenaDtor(void* object) {
  GpuRenderStageEvent_Specifications_ContextSpec* _this = reinterpret_cast< GpuRenderStageEvent_Specifications_ContextSpec* >(object);
  (void)_this;
}
void GpuRenderStageEvent_Specifications_ContextSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GpuRenderStageEvent_Specifications_ContextSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_Specifications_ContextSpec& GpuRenderStageEvent_Specifications_ContextSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_Specifications_ContextSpec_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_Specifications_ContextSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&context_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pid_) -
        reinterpret_cast<char*>(&context_)) + sizeof(pid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GpuRenderStageEvent_Specifications_ContextSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_context(&has_bits);
          context_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pid(&has_bits);
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GpuRenderStageEvent_Specifications_ContextSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 context = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_context(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_pid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  return target;
}

size_t GpuRenderStageEvent_Specifications_ContextSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 context = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_context());
    }

    // optional int32 pid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_Specifications_ContextSpec::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_Specifications_ContextSpec*>(
      &from));
}

void GpuRenderStageEvent_Specifications_ContextSpec::MergeFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      context_ = from.context_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GpuRenderStageEvent_Specifications_ContextSpec::CopyFrom(const GpuRenderStageEvent_Specifications_ContextSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_Specifications_ContextSpec::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_Specifications_ContextSpec::InternalSwap(GpuRenderStageEvent_Specifications_ContextSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GpuRenderStageEvent_Specifications_ContextSpec, pid_)
      + sizeof(GpuRenderStageEvent_Specifications_ContextSpec::pid_)
      - PROTOBUF_FIELD_OFFSET(GpuRenderStageEvent_Specifications_ContextSpec, context_)>(
          reinterpret_cast<char*>(&context_),
          reinterpret_cast<char*>(&other->context_));
}

std::string GpuRenderStageEvent_Specifications_ContextSpec::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec";
}


// ===================================================================

class GpuRenderStageEvent_Specifications_Description::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_Specifications_Description>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GpuRenderStageEvent_Specifications_Description::GpuRenderStageEvent_Specifications_Description(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
}
GpuRenderStageEvent_Specifications_Description::GpuRenderStageEvent_Specifications_Description(const GpuRenderStageEvent_Specifications_Description& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
}

void GpuRenderStageEvent_Specifications_Description::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GpuRenderStageEvent_Specifications_Description::~GpuRenderStageEvent_Specifications_Description() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void GpuRenderStageEvent_Specifications_Description::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GpuRenderStageEvent_Specifications_Description::ArenaDtor(void* object) {
  GpuRenderStageEvent_Specifications_Description* _this = reinterpret_cast< GpuRenderStageEvent_Specifications_Description* >(object);
  (void)_this;
}
void GpuRenderStageEvent_Specifications_Description::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GpuRenderStageEvent_Specifications_Description::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_Specifications_Description& GpuRenderStageEvent_Specifications_Description::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_Specifications_Description_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_Specifications_Description::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GpuRenderStageEvent_Specifications_Description::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GpuRenderStageEvent_Specifications_Description::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  return target;
}

size_t GpuRenderStageEvent_Specifications_Description::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string description = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_Specifications_Description::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_Specifications_Description*>(
      &from));
}

void GpuRenderStageEvent_Specifications_Description::MergeFrom(const GpuRenderStageEvent_Specifications_Description& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
  }
}

void GpuRenderStageEvent_Specifications_Description::CopyFrom(const GpuRenderStageEvent_Specifications_Description& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.Specifications.Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_Specifications_Description::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_Specifications_Description::InternalSwap(GpuRenderStageEvent_Specifications_Description* other) {
  using std::swap;
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

std::string GpuRenderStageEvent_Specifications_Description::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.Specifications.Description";
}


// ===================================================================

class GpuRenderStageEvent_Specifications::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent_Specifications>()._has_bits_);
  static const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec& context_spec(const GpuRenderStageEvent_Specifications* msg);
  static void set_has_context_spec(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec&
GpuRenderStageEvent_Specifications::_Internal::context_spec(const GpuRenderStageEvent_Specifications* msg) {
  return *msg->context_spec_;
}
GpuRenderStageEvent_Specifications::GpuRenderStageEvent_Specifications(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena),
  hw_queue_(arena),
  stage_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GpuRenderStageEvent.Specifications)
}
GpuRenderStageEvent_Specifications::GpuRenderStageEvent_Specifications(const GpuRenderStageEvent_Specifications& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_),
      hw_queue_(from.hw_queue_),
      stage_(from.stage_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  if (from._internal_has_context_spec()) {
    context_spec_ = new ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec(*from.context_spec_);
  } else {
    context_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent.Specifications)
}

void GpuRenderStageEvent_Specifications::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  context_spec_ = nullptr;
}

GpuRenderStageEvent_Specifications::~GpuRenderStageEvent_Specifications() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent.Specifications)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void GpuRenderStageEvent_Specifications::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete context_spec_;
}

void GpuRenderStageEvent_Specifications::ArenaDtor(void* object) {
  GpuRenderStageEvent_Specifications* _this = reinterpret_cast< GpuRenderStageEvent_Specifications* >(object);
  (void)_this;
}
void GpuRenderStageEvent_Specifications::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GpuRenderStageEvent_Specifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent_Specifications& GpuRenderStageEvent_Specifications::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_Specifications_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent_Specifications::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hw_queue_.Clear();
  stage_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(context_spec_ != nullptr);
    context_spec_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GpuRenderStageEvent_Specifications::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hw_queue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stage(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GpuRenderStageEvent_Specifications::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::context_spec(this), target, stream);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_hw_queue_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_hw_queue(i), target, stream);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stage_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_stage(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GpuRenderStageEvent.Specifications)
  return target;
}

size_t GpuRenderStageEvent_Specifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description hw_queue = 2;
  total_size += 1UL * this->_internal_hw_queue_size();
  for (const auto& msg : this->hw_queue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.Specifications.Description stage = 3;
  total_size += 1UL * this->_internal_stage_size();
  for (const auto& msg : this->stage_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .perfetto.protos.GpuRenderStageEvent.Specifications.ContextSpec context_spec = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *context_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent_Specifications::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent_Specifications*>(
      &from));
}

void GpuRenderStageEvent_Specifications::MergeFrom(const GpuRenderStageEvent_Specifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hw_queue_.MergeFrom(from.hw_queue_);
  stage_.MergeFrom(from.stage_);
  if (from._internal_has_context_spec()) {
    _internal_mutable_context_spec()->::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec::MergeFrom(from._internal_context_spec());
  }
}

void GpuRenderStageEvent_Specifications::CopyFrom(const GpuRenderStageEvent_Specifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent.Specifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent_Specifications::IsInitialized() const {
  return true;
}

void GpuRenderStageEvent_Specifications::InternalSwap(GpuRenderStageEvent_Specifications* other) {
  using std::swap;
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  hw_queue_.InternalSwap(&other->hw_queue_);
  stage_.InternalSwap(&other->stage_);
  swap(context_spec_, other->context_spec_);
}

std::string GpuRenderStageEvent_Specifications::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent.Specifications";
}


// ===================================================================

class GpuRenderStageEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<GpuRenderStageEvent>()._has_bits_);
  static void set_has_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hw_queue_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_stage_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_gpu_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_render_target_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_submission_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_render_pass_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_command_buffer_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::perfetto::protos::GpuRenderStageEvent_Specifications& specifications(const GpuRenderStageEvent* msg);
  static void set_has_specifications(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hw_queue_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stage_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::perfetto::protos::GpuRenderStageEvent_Specifications&
GpuRenderStageEvent::_Internal::specifications(const GpuRenderStageEvent* msg) {
  return *msg->specifications_;
}
GpuRenderStageEvent::GpuRenderStageEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena),
  _extensions_(arena),
  extra_data_(arena),
  render_subpass_index_mask_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.GpuRenderStageEvent)
}
GpuRenderStageEvent::GpuRenderStageEvent(const GpuRenderStageEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_),
      extra_data_(from.extra_data_),
      render_subpass_index_mask_(from.render_subpass_index_mask_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  if (from._internal_has_specifications()) {
    specifications_ = new ::perfetto::protos::GpuRenderStageEvent_Specifications(*from.specifications_);
  } else {
    specifications_ = nullptr;
  }
  ::memcpy(&event_id_, &from.event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stage_iid_) -
    reinterpret_cast<char*>(&event_id_)) + sizeof(stage_iid_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.GpuRenderStageEvent)
}

void GpuRenderStageEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&specifications_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&stage_iid_) -
      reinterpret_cast<char*>(&specifications_)) + sizeof(stage_iid_));
}

GpuRenderStageEvent::~GpuRenderStageEvent() {
  // @@protoc_insertion_point(destructor:perfetto.protos.GpuRenderStageEvent)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void GpuRenderStageEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete specifications_;
}

void GpuRenderStageEvent::ArenaDtor(void* object) {
  GpuRenderStageEvent* _this = reinterpret_cast< GpuRenderStageEvent* >(object);
  (void)_this;
}
void GpuRenderStageEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GpuRenderStageEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GpuRenderStageEvent& GpuRenderStageEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GpuRenderStageEvent_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void GpuRenderStageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.GpuRenderStageEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  extra_data_.Clear();
  render_subpass_index_mask_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(specifications_ != nullptr);
    specifications_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&render_pass_handle_) -
        reinterpret_cast<char*>(&event_id_)) + sizeof(render_pass_handle_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&submission_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stage_iid_) -
        reinterpret_cast<char*>(&submission_id_)) + sizeof(stage_iid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* GpuRenderStageEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 event_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_event_id(&has_bits);
          event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_duration(&has_bits);
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 hw_queue_id = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_hw_queue_id(&has_bits);
          hw_queue_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 stage_id = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_stage_id(&has_bits);
          stage_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 context = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_context(&has_bits);
          context_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extra_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_specifications(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 render_target_handle = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_render_target_handle(&has_bits);
          render_target_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 render_pass_handle = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_render_pass_handle(&has_bits);
          render_pass_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 submission_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_submission_id(&has_bits);
          submission_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 gpu_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_gpu_id(&has_bits);
          gpu_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 command_buffer_handle = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_command_buffer_handle(&has_bits);
          command_buffer_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 hw_queue_iid = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_hw_queue_iid(&has_bits);
          hw_queue_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 stage_iid = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_stage_iid(&has_bits);
          stage_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 render_subpass_index_mask = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_render_subpass_index_mask(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<120>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_render_subpass_index_mask(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
      if ((800u <= tag && tag < 808u)) {
        ptr = _extensions_.ParseField(tag, ptr,
            internal_default_instance(), &_internal_metadata_, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GpuRenderStageEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.GpuRenderStageEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 event_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_event_id(), target);
  }

  // optional uint64 duration = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_duration(), target);
  }

  // optional int32 hw_queue_id = 3 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_hw_queue_id(), target);
  }

  // optional int32 stage_id = 4 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_stage_id(), target);
  }

  // optional uint64 context = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_context(), target);
  }

  // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_extra_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_extra_data(i), target, stream);
  }

  // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::specifications(this), target, stream);
  }

  // optional uint64 render_target_handle = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_render_target_handle(), target);
  }

  // optional uint64 render_pass_handle = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_render_pass_handle(), target);
  }

  // optional uint32 submission_id = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_submission_id(), target);
  }

  // optional int32 gpu_id = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_gpu_id(), target);
  }

  // optional uint64 command_buffer_handle = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(12, this->_internal_command_buffer_handle(), target);
  }

  // optional uint64 hw_queue_iid = 13;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_hw_queue_iid(), target);
  }

  // optional uint64 stage_iid = 14;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(14, this->_internal_stage_iid(), target);
  }

  // repeated uint64 render_subpass_index_mask = 15;
  for (int i = 0, n = this->_internal_render_subpass_index_mask_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(15, this->_internal_render_subpass_index_mask(i), target);
  }

  // Extension range [100, 101)
  target = _extensions_._InternalSerialize(
      100, 101, target, stream);

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.GpuRenderStageEvent)
  return target;
}

size_t GpuRenderStageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.GpuRenderStageEvent)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .perfetto.protos.GpuRenderStageEvent.ExtraData extra_data = 6;
  total_size += 1UL * this->_internal_extra_data_size();
  for (const auto& msg : this->extra_data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 render_subpass_index_mask = 15;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->render_subpass_index_mask_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_render_subpass_index_mask_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .perfetto.protos.GpuRenderStageEvent.Specifications specifications = 7 [deprecated = true];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *specifications_);
    }

    // optional uint64 event_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_event_id());
    }

    // optional uint64 duration = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_duration());
    }

    // optional int32 hw_queue_id = 3 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_hw_queue_id());
    }

    // optional int32 stage_id = 4 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_stage_id());
    }

    // optional uint64 context = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_context());
    }

    // optional uint64 render_target_handle = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_render_target_handle());
    }

    // optional uint64 render_pass_handle = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_render_pass_handle());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional uint32 submission_id = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_submission_id());
    }

    // optional int32 gpu_id = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_gpu_id());
    }

    // optional uint64 command_buffer_handle = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_command_buffer_handle());
    }

    // optional uint64 hw_queue_iid = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_hw_queue_iid());
    }

    // optional uint64 stage_iid = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_stage_iid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpuRenderStageEvent::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const GpuRenderStageEvent*>(
      &from));
}

void GpuRenderStageEvent::MergeFrom(const GpuRenderStageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.GpuRenderStageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extra_data_.MergeFrom(from.extra_data_);
  render_subpass_index_mask_.MergeFrom(from.render_subpass_index_mask_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_specifications()->::perfetto::protos::GpuRenderStageEvent_Specifications::MergeFrom(from._internal_specifications());
    }
    if (cached_has_bits & 0x00000002u) {
      event_id_ = from.event_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000008u) {
      hw_queue_id_ = from.hw_queue_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      stage_id_ = from.stage_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      context_ = from.context_;
    }
    if (cached_has_bits & 0x00000040u) {
      render_target_handle_ = from.render_target_handle_;
    }
    if (cached_has_bits & 0x00000080u) {
      render_pass_handle_ = from.render_pass_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      submission_id_ = from.submission_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      gpu_id_ = from.gpu_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      command_buffer_handle_ = from.command_buffer_handle_;
    }
    if (cached_has_bits & 0x00000800u) {
      hw_queue_iid_ = from.hw_queue_iid_;
    }
    if (cached_has_bits & 0x00001000u) {
      stage_iid_ = from.stage_iid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GpuRenderStageEvent::CopyFrom(const GpuRenderStageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.GpuRenderStageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpuRenderStageEvent::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  return true;
}

void GpuRenderStageEvent::InternalSwap(GpuRenderStageEvent* other) {
  using std::swap;
  _extensions_.Swap(&other->_extensions_);
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  extra_data_.InternalSwap(&other->extra_data_);
  render_subpass_index_mask_.InternalSwap(&other->render_subpass_index_mask_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GpuRenderStageEvent, stage_iid_)
      + sizeof(GpuRenderStageEvent::stage_iid_)
      - PROTOBUF_FIELD_OFFSET(GpuRenderStageEvent, specifications_)>(
          reinterpret_cast<char*>(&specifications_),
          reinterpret_cast<char*>(&other->specifications_));
}

std::string GpuRenderStageEvent::GetTypeName() const {
  return "perfetto.protos.GpuRenderStageEvent";
}


// ===================================================================

class InternedGraphicsContext::_Internal {
 public:
  using HasBits = decltype(std::declval<InternedGraphicsContext>()._has_bits_);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_api(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

InternedGraphicsContext::InternedGraphicsContext(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.InternedGraphicsContext)
}
InternedGraphicsContext::InternedGraphicsContext(const InternedGraphicsContext& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&api_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(api_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.InternedGraphicsContext)
}

void InternedGraphicsContext::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&iid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&api_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(api_));
}

InternedGraphicsContext::~InternedGraphicsContext() {
  // @@protoc_insertion_point(destructor:perfetto.protos.InternedGraphicsContext)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void InternedGraphicsContext::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void InternedGraphicsContext::ArenaDtor(void* object) {
  InternedGraphicsContext* _this = reinterpret_cast< InternedGraphicsContext* >(object);
  (void)_this;
}
void InternedGraphicsContext::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InternedGraphicsContext::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InternedGraphicsContext& InternedGraphicsContext::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InternedGraphicsContext_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void InternedGraphicsContext::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.InternedGraphicsContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&iid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&api_) -
        reinterpret_cast<char*>(&iid_)) + sizeof(api_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* InternedGraphicsContext::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_iid(&has_bits);
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pid(&has_bits);
          pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::InternedGraphicsContext_Api_IsValid(val))) {
            _internal_set_api(static_cast<::perfetto::protos::InternedGraphicsContext_Api>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InternedGraphicsContext::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.InternedGraphicsContext)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 iid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_iid(), target);
  }

  // optional int32 pid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_pid(), target);
  }

  // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_api(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.InternedGraphicsContext)
  return target;
}

size_t InternedGraphicsContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.InternedGraphicsContext)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 iid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_iid());
    }

    // optional int32 pid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pid());
    }

    // optional .perfetto.protos.InternedGraphicsContext.Api api = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_api());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternedGraphicsContext::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const InternedGraphicsContext*>(
      &from));
}

void InternedGraphicsContext::MergeFrom(const InternedGraphicsContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.InternedGraphicsContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      iid_ = from.iid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000004u) {
      api_ = from.api_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InternedGraphicsContext::CopyFrom(const InternedGraphicsContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.InternedGraphicsContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternedGraphicsContext::IsInitialized() const {
  return true;
}

void InternedGraphicsContext::InternalSwap(InternedGraphicsContext* other) {
  using std::swap;
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InternedGraphicsContext, api_)
      + sizeof(InternedGraphicsContext::api_)
      - PROTOBUF_FIELD_OFFSET(InternedGraphicsContext, iid_)>(
          reinterpret_cast<char*>(&iid_),
          reinterpret_cast<char*>(&other->iid_));
}

std::string InternedGraphicsContext::GetTypeName() const {
  return "perfetto.protos.InternedGraphicsContext";
}


// ===================================================================

class InternedGpuRenderStageSpecification::_Internal {
 public:
  using HasBits = decltype(std::declval<InternedGpuRenderStageSpecification>()._has_bits_);
  static void set_has_iid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_category(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

InternedGpuRenderStageSpecification::InternedGpuRenderStageSpecification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:perfetto.protos.InternedGpuRenderStageSpecification)
}
InternedGpuRenderStageSpecification::InternedGpuRenderStageSpecification(const InternedGpuRenderStageSpecification& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.SetLite(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(category_));
  // @@protoc_insertion_point(copy_constructor:perfetto.protos.InternedGpuRenderStageSpecification)
}

void InternedGpuRenderStageSpecification::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&iid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&category_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(category_));
}

InternedGpuRenderStageSpecification::~InternedGpuRenderStageSpecification() {
  // @@protoc_insertion_point(destructor:perfetto.protos.InternedGpuRenderStageSpecification)
  SharedDtor();
  _internal_metadata_.Delete<std::string>();
}

void InternedGpuRenderStageSpecification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InternedGpuRenderStageSpecification::ArenaDtor(void* object) {
  InternedGpuRenderStageSpecification* _this = reinterpret_cast< InternedGpuRenderStageSpecification* >(object);
  (void)_this;
}
void InternedGpuRenderStageSpecification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InternedGpuRenderStageSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InternedGpuRenderStageSpecification& InternedGpuRenderStageSpecification::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InternedGpuRenderStageSpecification_protos_2fperfetto_2ftrace_2fgpu_2fgpu_5frender_5fstage_5fevent_2eproto.base);
  return *internal_default_instance();
}


void InternedGpuRenderStageSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:perfetto.protos.InternedGpuRenderStageSpecification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&iid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&category_) -
        reinterpret_cast<char*>(&iid_)) + sizeof(category_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* InternedGpuRenderStageSpecification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_iid(&has_bits);
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory_IsValid(val))) {
            _internal_set_category(static_cast<::perfetto::protos::InternedGpuRenderStageSpecification_RenderStageCategory>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<std::string>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InternedGpuRenderStageSpecification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:perfetto.protos.InternedGpuRenderStageSpecification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 iid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_iid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_category(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:perfetto.protos.InternedGpuRenderStageSpecification)
  return target;
}

size_t InternedGpuRenderStageSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:perfetto.protos.InternedGpuRenderStageSpecification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional uint64 iid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_iid());
    }

    // optional .perfetto.protos.InternedGpuRenderStageSpecification.RenderStageCategory category = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_category());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString).size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternedGpuRenderStageSpecification::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const InternedGpuRenderStageSpecification*>(
      &from));
}

void InternedGpuRenderStageSpecification::MergeFrom(const InternedGpuRenderStageSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:perfetto.protos.InternedGpuRenderStageSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      iid_ = from.iid_;
    }
    if (cached_has_bits & 0x00000008u) {
      category_ = from.category_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InternedGpuRenderStageSpecification::CopyFrom(const InternedGpuRenderStageSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:perfetto.protos.InternedGpuRenderStageSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternedGpuRenderStageSpecification::IsInitialized() const {
  return true;
}

void InternedGpuRenderStageSpecification::InternalSwap(InternedGpuRenderStageSpecification* other) {
  using std::swap;
  _internal_metadata_.Swap<std::string>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InternedGpuRenderStageSpecification, category_)
      + sizeof(InternedGpuRenderStageSpecification::category_)
      - PROTOBUF_FIELD_OFFSET(InternedGpuRenderStageSpecification, iid_)>(
          reinterpret_cast<char*>(&iid_),
          reinterpret_cast<char*>(&other->iid_));
}

std::string InternedGpuRenderStageSpecification::GetTypeName() const {
  return "perfetto.protos.InternedGpuRenderStageSpecification";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_ExtraData* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_ExtraData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GpuRenderStageEvent_ExtraData >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GpuRenderStageEvent_Specifications_ContextSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_Specifications_Description* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GpuRenderStageEvent_Specifications_Description >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent_Specifications* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent_Specifications >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GpuRenderStageEvent_Specifications >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::GpuRenderStageEvent* Arena::CreateMaybeMessage< ::perfetto::protos::GpuRenderStageEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::GpuRenderStageEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::InternedGraphicsContext* Arena::CreateMaybeMessage< ::perfetto::protos::InternedGraphicsContext >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::InternedGraphicsContext >(arena);
}
template<> PROTOBUF_NOINLINE ::perfetto::protos::InternedGpuRenderStageSpecification* Arena::CreateMaybeMessage< ::perfetto::protos::InternedGpuRenderStageSpecification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::perfetto::protos::InternedGpuRenderStageSpecification >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
